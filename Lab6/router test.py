__author__ = 'TR tr7550@rit.edu'
"""
CSCI-603: Router Test
Author: Tejas Raval

This code testes RingBuffer, Stack, Queue, ListStack, ListQueue
"""
from ring_buffer import RingBuffer
from queue import Queue
from stack import Stack
from ListStack import ListStack
from ListQueue import ListQueue
print("Test case of RingBuffer")
print("Assumed RingBuffer capacity is 5 for testing. All the test cases below are according to size 5")
sizeOfRB = int(input("Enter size of RingBuffer"))
list1 = RingBuffer(sizeOfRB)
print("Adding 1")
list1.insert_keep_new("1")
print("Adding 2")
list1.insert_keep_new("2")
print("Adding 3")
list1.insert_keep_old("3")
print("Adding 4")
list1.insert_keep_old("4")
print("Orignal")
list1.print()

print("After insert_keep_new(5)")
list1.insert_keep_new("5")
list1.print()
print("After insert_keep_new(6)")
list1.insert_keep_new("6")
list1.print()
print("After insert_keep_old(7)")
list1.insert_keep_old("7")
list1.print()
print("After insert_keep_old(8)")
list1.insert_keep_old("8")
list1.print()
print("Capacity is ",list1.capacity())
print("Testing remove_newest()")
list1.remove_newest()
list1.print()

print("Testing remove_oldest()")
list1.remove_oldest()
list1.print()
print("Size of RingBuffer", list1.sizeOf())
print("Capacity of RingBuffer", list1.capacity())
print("Testing find. Searching for 3")
list1.Find("3")

print("Reseting the RingBuffer to capacity 0")
list1 = RingBuffer(0)
print("Trying to insert_keep_new(1)")
list1.insert_keep_new("1")

print("-----------------------")
print("Test Case of Stack")
print("Assumed Stack capacity is 5 for testing. All the test cases below are according to size 5")
sizeOfS = int(input("Enter size of Stack"))
list1 = Stack(sizeOfS)
print("Adding 1")
list1.push(1)
print("Adding 2")
list1.push(2)
print("Adding 3")
list1.push(3)
list1.__str__()
print("poping ", list1.peek())
list1.pop()
list1.__str__()
print("Pushing 4")
list1.push(4)
print("Pushing 5")
list1.push(5)
list1.__str__()
print("Pushing 6")
list1.push(6)
list1.__str__()
print("Pushing 7")
list1.push(7)
list1.__str__()
print("Pushing 8")
list1.push(8)
list1.__str__()
print("poping ", list1.peek())
list1.pop()
list1.__str__()
print("poping ", list1.peek())
list1.pop()
list1.__str__()
print("Peek", list1.peek())
list1.__str__()

print("Capacity", list1.capacity())

print("Reseting the Stack with size 0")
list1 = Stack(0)
print("Now trying to add 1")
list1.push(1)
print("Now trying to print Stack")
list1.__str__()
print("Now trying to pop")
list1.pop()

print("-------------------")
print("Test case of Queue")
print("Assumed Queue capacity is 5 for testing. All the test cases below are according to size 5")
sizeOfQ = int(input("Enter size of Queue"))
list1 = Queue(sizeOfQ)
# Assumed size is 5
print("Testing Queue")
list1 = Queue(sizeOfQ)

print("Adding 1")
list1.enqueue(1)
print("Adding 2")
list1.enqueue(2)
print("Adding 2")
list1.enqueue(3)
print("Adding 3")
list1.enqueue(4)
print("Adding 5")
list1.enqueue(5)

print("Printing Queue")
list1.__str__()
print("Adding 6 but it should not be added as Queue is full")
list1.enqueue(6)
print("Now doing dqueue and printing the queue")
list1.dequeue()
list1.__str__()

print("Adding 6 now")
list1.enqueue(6)
print("Printing Queue")
list1.__str__()
print("Checking Queue's size")
print(list1.size())

print("Checking Queue's capacity")
print(list1.capacity1)

print("Peek on Queue returns")
print(list1.peek())

print("Reseting the Queue with size 0")
list1 = Queue(0)
print("Now trying to add 1")
list1.enqueue(1)
print("Now trying to print Queue")
list1.__str__()
print("Now trying to dequeqe")
list1.dequeue()


print("-------------------")
print("Test case of ListStack")
sizeOfLS = int(input("Enter size of ListStack"))
a = ListStack(sizeOfLS)
print("Adding 1")
a.insert(1)
print('peek ', a.peek(), 'currently contains', a)
print("Adding 2")
a.insert(2)
print("Adding 3")
a.insert(3)
print("ListStack as of now ", a)
print("Adding 4.")
a.insert(4)
print("ListStack as of now ", a)
print("capacity of ListStack is", a.capacity())
print("Removing ",a.peek())
a.remove()
print(a)


print("------------------")
print("Testing ListQueue")
sizeOfLQ = int(input("Enter size of ListQueue"))
a = ListQueue(sizeOfLQ)
print("Adding 1")
a.insert(1)
print('peek ', a.peek(), 'currently contains', a)
print("Adding 2")
a.insert(2)
print("Adding 3")
a.insert(3)
print("ListQueue as of now ", a)
print("Adding 4.")
a.insert(4)
print("ListQueue as of now ", a)
print("Removing ", a.peek())
a.remove()
print(a)